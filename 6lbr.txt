Prerequisites

Install the following prerequisites (assuming an Ubuntu 15.04 build machine):

sudo apt-get install ncurses-dev

Build and Install 6lbr

Obtain a copy of 6lbr, build and install:

git clone --recursive https://github.com/cetic/6lbr
cd 6lbr/examples/6lbr
make all plugins tools
sudo make install


The 6lbr configuration file should look something like this: (sudo vim /etc/6lbr/6lbr.conf)
MODE=ROUTER
#MODE=SMART-BRIDGE
#MODE=RPL-RELAY
#MODE=FULL-TRANSPARENT-BRIDGE
#MODE=NDP-ROUTER
#MODE=6LR
#MODE=RPL-ROOT

RAW_ETH=0
BRIDGE=1
CREATE_BRIDGE=0
#ETH_JOIN_BRIDGE=0
DEV_BRIDGE=br0
DEV_TAP=tap0
DEV_ETH=eth0
#RAW_ETH_FCS=1
RAW_ETH_FCS=0

DEV_RADIO=/dev/ttyACM0 #2.4GHz USB SensorTag will enumerate like ACM0
BAUDRATE=115200

LOG_LEVEL=3


The interfaces file should look something like this: (sudo vim /etc/network/interfaces)
auto lo
iface lo inet loopback

auto br0
iface br0 inet static
  pre-up brctl addbr br0
  pre-up brctl addif br0 eth0
  bridge_ports eth0
  bridge_stp off
  up echo 0 > /sys/devices/virtual/net/br0/bridge/multicast_snooping
  post-up ip link set br0 address `ip link show eth0 | grep ether | awk '{print $2}'`
  address 192.168.42.191
  network 192.168.42.0
  netmask 255.255.255.0
  gateway 192.168.42.1

auto eth0
iface eth0 inet static
  address 192.168.42.191
  network 192.168.42.0
  netmask 255.255.255.0
  gateway 192.168.42.1
iface eth0 inet6 static
  address 2001::191
  netmask 64

iface usb0 inet static
    address 192.168.7.2
    netmask 255.255.255.0
    network 192.168.7.0
    gateway 192.168.7.1


In case the ethernet interface is other than eth0 (like enp0s25):
Ubuntu has been using the new interface after Ubuntu 15.04. Many programs create a problem if this convention is used.
To rename the interface to eth0 following steps schould be made:

sudo nano /etc/default/grub

At the line GRUB_CMDLINE_LINUX add net.ifnames=0

GRUB_CMDLINE_LINUX="[previous parameters] net.ifnames=0"

Then generate new grub file:

sudo grub-mkconfig -o /boot/grub/grub.cfg

At the end reboot system.

NOTE: The 6lbr runs a tap interface which make use of the eth0 interface. Even after stopping 6lbr service if you are not able to connect to the internet then most probably one of these interfaces are up. To remove them goto sudo vim /etc/network/interfaces. remove br0 interface and the static eth0 interface settings. Run sudo ifconfig br0/tap0 down. Then run sudo service network-manager restart. All good! 

NOTE: To upload a bin through bootloader, set the bootloader settings to these:
#ifndef SET_CCFG_BL_CONFIG_BOOTLOADER_ENABLE
//#define SET_CCFG_BL_CONFIG_BOOTLOADER_ENABLE            0x00       // Disable ROM boot loader
 #define SET_CCFG_BL_CONFIG_BOOTLOADER_ENABLE         0xC5       // Enable ROM boot loader
#endif

#ifndef SET_CCFG_BL_CONFIG_BL_LEVEL
 #define SET_CCFG_BL_CONFIG_BL_LEVEL                  0x0        // Active low to open boot loader backdoor
//#define SET_CCFG_BL_CONFIG_BL_LEVEL                     0x1        // Active high to open boot loader backdoor
#endif

#ifndef SET_CCFG_BL_CONFIG_BL_PIN_NUMBER
#define SET_CCFG_BL_CONFIG_BL_PIN_NUMBER                0x0D       // DIO number for boot loader backdoor
#endif

#ifndef SET_CCFG_BL_CONFIG_BL_ENABLE
 #define SET_CCFG_BL_CONFIG_BL_ENABLE                 0xC5       // Enabled boot loader backdoor
//#define SET_CCFG_BL_CONFIG_BL_ENABLE                    0xFF       // Disabled boot loader backdoor
#endif

after that build using 'sudo make cc26xx-web-demo.upload BOARD=launchpad/cc2650' and before the upload starts enable the bootloader by pressing the DIO13 (set above) and then the reset button.


NOTE: To login to the mote. Go into the project directory and run "sudo make login BOARD=launchpad/cc2650". In case the dev path is other that "/dev/ttyS0" then goto 'contiki/tools/sky' and edit the file serialdump.c. Change the MODEMDEVICE macro to the required dev name (/dev/ttyACMx) and then in the sky folder run 'make all' and try logging in again

OR run this in a python code for logging
import serial
import time
print "Enter ttyACM number"
x = raw_input()
dev = '/dev/ttyACM'+ str(x[0])
ser = serial.Serial(dev, baudrate = 115200)
while 1:
	print "[" + str(int(time.time())) +"] " + ser.readline()

NOTE: To view the nvm configuration run '/usr/lib/6lbr/bin/nvm_tool --print /etc/6lbr/nvm.dat'
